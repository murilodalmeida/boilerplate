name: Publish Libs NuGet Package

on:
  push:
    tags:
      - "release-*"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Define project variables
        run: |
          echo "SOLUTION_PATH=apps/libs/Libs.sln" >> $GITHUB_ENV
          echo "LIBS_PATH=apps/libs/src" >> $GITHUB_ENV

      - name: Extract version from tag
        run: |
          VERSION="${GITHUB_REF#refs/tags/release-}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Check if version is a pre-release
        run: |
          if [[ "${{ env.VERSION }}" =~ -(test|beta|preview) ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV
          fi

      - name: Get commit message for release notes
        run: echo "RELEASE_BODY=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      - name: Check changes in libs folder
        id: check_changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "^${{ env.LIBS_PATH }}/"; then
            echo "CHANGED=true" >> $GITHUB_ENV
          else
            echo "CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Stop if no relevant changes
        if: env.CHANGED == 'false'
        run: echo "No changes in ${{ env.LIBS_PATH }}/. Skipping publish." && exit 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      - name: Run tests
        run: dotnet test ${{ env.SOLUTION_PATH }} --configuration Release --no-build --verbosity normal

      - name: Pack NuGet package
        run: dotnet pack ${{ env.SOLUTION_PATH }} --configuration Release --no-build --output ./nupkgs /p:Version=${{ env.VERSION }}

      - name: Push NuGet package to GitHub Packages
        run: dotnet nuget push ./nupkgs/*.nupkg --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --api-key ${{ secrets.GH_NUGET_TOKEN }} --skip-duplicate

      - name: Create GitHub Release (Only for Final Versions)
        if: env.IS_PRERELEASE == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ env.VERSION }}"
          body: "${{ env.RELEASE_BODY }}"
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
